]'
)
df = m$aggregate(
'[
{ "$addFields": { "visite": {"$arrayElemAt" : [ "$grades", 0 ]} } }
]'
)
df = cbind(df, df$visite)
df$visite = NULL
df$grades = NULL
ggplot(df, aes(grade, score)) +
geom_boxplot()
ggplot(df, aes(grade, score)) +
geom_boxplot() +
facet_wrap(~ borough)
ggplot(df, aes(score, grade)) +
geom_boxplot() +
facet_wrap(~ borough)
ggplot(df, aes(score, fct_inorder(grade))) +
geom_boxplot() +
facet_wrap(~ borough)
ggplot(df, aes(score, fct_inseq(grade))) +
geom_boxplot() +
facet_wrap(~ borough)
ggplot(df, aes(score, fct_inffreq(grade))) +
geom_boxplot() +
facet_wrap(~ borough)
ggplot(df, aes(score, fct_infreq(grade))) +
geom_boxplot() +
facet_wrap(~ borough)
?fct_inorder
ggplot(df, aes(score, fct_infreq(grade))) +
geom_boxplot() +
scale_y_discrete(labels = c("A", "B", "C", "P", "Z", "Not Yet Graded")) +
facet_wrap(~ borough)
ggplot(df, aes(score, fct_infreq(grade))) +
geom_boxplot() +
scale_y_discrete(labels = c("A", "B", "C", "P", "Z", "Not Yet Graded")) +
facet_wrap(~ borough) +
theme_minimal() +
labs(x = "", y = "Grade")
ggplot(df, aes(score, fct_infreq(grade))) +
geom_boxplot() +
scale_y_discrete(labels = c("A", "B", "C", "P", "Z", "Not Yet Graded")) +
facet_wrap(~ borough) +
theme_minimal() +
labs(x = "", y = "Grade")
df = df$find(fields = '{ "address": 1, "borough": 1 }')
mat = t(sapply(df$address$coord, function(c) { return(list(lng = c[1], lat = c[2]))}))
df = df$find(fields = '{ "address": 1, "borough": 1 }')
df = m$find(fields = '{ "address": 1, "borough": 1 }')
mat = t(sapply(df$address$coord, function(c) { return(list(lng = c[1], lat = c[2]))}))
df = cbind(df, mat)
library(ggmap)
install.packages("ggmap")
?ggmap
library(ggmap)
?ggmap
ny = get_map("New-York")
ny = get_map("New-York", source = "stamen")
ny = get_map(c(-70, 40), source = "stamen")
ny = get_map(c(-70, 40), maptype = "toner")
ny = get_map(c(-70, 40), maptype = "toner")
?register_google
ny = get_map(c(-70, 40), maptype = "terrain")
ny = get_map(c(-70, 40), maptype = "watercolor")
ny = get_map(c(-70, 40), maptype = 1)
ny = get_map(c(-70, 40), maptype = "terrain", source = "osm")
(map <- get_map(c(left = -97.1268, bottom = 31.536245, right = -97.099334, top = 31.559652)))
ggmap(map)
ny = get_map(c(-70, 40), zoom = 10, maptype = "terrain", source = "osm")
ny = get_map(c(lng = -70, lat = 40), zoom = 10, maptype = "terrain", source = "osm")
ny = get_map(c(lon = -70, lat = 40), zoom = 10, maptype = "terrain", source = "osm")
(map <- get_map(maptype = "roadmap"))
(map <- get_map(maptype = "roadmap"))
(map <- get_map(maptype = "roadmap"))
ny = get_map(c(left = -97.1268, bottom = 31.536245, right = -97.099334, top = 31.559652), maptype = "toner")
ggmap(ny)
ny = get_map(c(left = -65, bottom = 35, right = -75, top = 45), maptype = "toner")
ny = get_map(c(left = -65, bottom = 35, right = -75, top = 45), zoom = 10, maptype = "toner")
ny = get_map(c(left = -65, bottom = 35, right = -75, top = 45), zoom = 5, maptype = "toner")
ggmap(ny)
ggplot(df, aes(lng, lat)) + geom_point()
df$lng
df = m$find(fields = '{ "address": 1, "borough": 1 }')
df$lng = sapply(df$address$coord, function(c) { return (c[1]) })
df$lat = sapply(df$address$coord, function(c) { return (c[2]) })
df$lng
ggplot(df, aes(lng, lat)) + geom_point()
ny = get_map(c(left = -70, bottom = 35, right = -75, top = 45), zoom = 5, maptype = "toner")
ggmap(ny)
ny = get_map(c(left = -70, bottom = 40, right = -75, top = 41), zoom = 5, maptype = "toner")
ggmap(ny)
ny = get_map(c(left = -70, bottom = 40, right = -75, top = 41), maptype = "toner")
ny = get_map(c(left = -70, bottom = 40, right = -75, top = 41), zoom = 5, maptype = "toner")
ggmap(ny)
ny = get_map(c(left = -71, bottom = 40, right = -72, top = 41), zoom = 5, maptype = "toner")
ggmap(ny)
ny = get_map(c(left = -71, bottom = 40, right = -72, top = 41), zoom = 8, maptype = "toner")
ny = get_map(c(left = -71, bottom = 40, right = -72, top = 41), zoom = 8, maptype = "toner")
ggmap(ny)
ny = get_map(c(left = -97.1268, bottom = 31.536245, right = -97.099334, top = 31.559652), maptype = "toner")
ggmap(ny)
ny = get_map(c(left = -70.1268, bottom = 31.536245, right = -70.099334, top = 31.559652), maptype = "toner")
ggmap(ny)
ny = get_map(c(left = -70.1268, bottom = 41.536245, right = -70.099334, top = 41.559652), maptype = "toner")
ggmap(ny)
ny = get_map(c(left = -71.1268, bottom = 41.536245, right = -71.099334, top = 41.559652), maptype = "toner")
ggmap(ny)
ny = get_map(c(left = -71.1268, bottom = 41.536245, right = -70.099334, top = 41.559652), maptype = "toner")
ny = get_map(c(left = -71.1268, bottom = 41.536245, right = -70.099334, top = 41.559652), zoom = 10, maptype = "toner")
ggmap(ny)
ny = get_map(c(left = -71.1268, bottom = 40.536245, right = -70.099334, top = 42.559652), zoom = 10, maptype = "toner")
ggmap(ny)
ny = get_map(c(left = -72.1268, bottom = 40.536245, right = -70.099334, top = 42.559652), zoom = 10, maptype = "toner")
ggmap(ny)
ny = get_map(c(left = -72.1268, bottom = 40.536245, right = -70.099334, top = 42.559652), zoom = 8, maptype = "toner")
ggmap(ny)
ggmap(ny) +
geom_point(data = df, aes(lng, lat))
ggplot(df, aes(lng, lat)) + geom_point()
ggplot(df, aes(lng, lat)) + geom_point() + xlim(-72, -70)
ggplot(df, aes(lng, lat)) + geom_point()
ny = get_map(c(left = -72.1268, bottom = 40.536245, right = -70.099334, top = 42.559652), zoom = 6, maptype = "toner")
ggmap(ny) +
geom_point(data = df, aes(lng, lat))
ny = get_map(c(left = -75, bottom = 40.536245, right = -65, top = 42.559652), zoom = 6, maptype = "toner")
ggmap(ny) +
geom_point(data = df, aes(lng, lat))
ny = get_map(c(left = -75, bottom = 38, right = -73, top = 41), zoom = 6, maptype = "toner")
ggmap(ny) +
geom_point(data = df, aes(lng, lat))
ny = get_map(c(left = -75, bottom = 40, right = -73, top = 41), zoom = 6, maptype = "toner")
ggmap(ny) +
geom_point(data = df, aes(lng, lat))
ny = get_map(c(left = -74.5, bottom = 40.4, right = -73.5, top = 41), zoom = 6, maptype = "toner")
ggmap(ny) +
geom_point(data = df, aes(lng, lat))
ny = get_map(c(left = -74.5, bottom = 40.4, right = -73.5, top = 41), zoom = 8, maptype = "toner")
ggmap(ny) +
geom_point(data = df, aes(lng, lat))
ny = get_map(c(left = -74.5, bottom = 40.4, right = -73.5, top = 41), zoom = 9, maptype = "toner")
ggmap(ny) +
geom_point(data = df, aes(lng, lat))
ggmap(ny) +
geom_point(data = df, aes(lng, lat, color = borough))
library(WikipediaR)
install.packages("devtools")
devtools::install_github("fxjollois/WikipediaR")
library(WikipediaR)
test = userContribs("Bob Saint Clar")
test = userContribs()
test = userContribs("truc")
test = userContribs("Bob")
test = userContribs("Bob Saint Clar")
test = userContribs("Bob Saint Clar", domain = "fr")
test = userContribs("Bob_Saint_Clar", domain = "fr")
test
shiny::runApp('Nextcloud/Pédagogie-Administration/Année 2021-2022/Enseignements/STID 2AFA - NoSQL/tp5')
runApp('Nextcloud/Pédagogie-Administration/Année 2021-2022/Enseignements/STID 2AFA - NoSQL/tp5')
runApp('Nextcloud/Pédagogie-Administration/Année 2021-2022/Enseignements/STID 2AFA - NoSQL/tp5')
runApp('Nextcloud/Pédagogie-Administration/Année 2021-2022/Enseignements/STID 2AFA - NoSQL/tp5')
co2
CO2
faithful
runApp('Nextcloud/Pédagogie-Administration/Année 2021-2022/Enseignements/STID 2AFA - NoSQL/tp5')
plot(co2)
runApp('Nextcloud/Pédagogie-Administration/Année 2021-2022/Enseignements/STID 2AFA - NoSQL/tp5')
runApp('Nextcloud/Pédagogie-Administration/Année 2021-2022/Enseignements/STID 2AFA - NoSQL/tp5')
mtcars
ggplot(mtcars, aes(mpg, color = "cyl")) +
geom_hist()
library(ggplot2)
ggplot(mtcars, aes(mpg, color = "cyl")) +
geom_hist()
ggplot(mtcars, aes(mpg, color = "cyl")) +
geom_histogram()
ggplot(mtcars, aes(mpg, fill = "cyl")) +
geom_histogram()
ggplot(mtcars, aes(mpg, fill = cyl)) +
geom_histogram()
ggplot(mtcars, aes(mpg, color = cyl)) +
geom_histogram()
ggplot(mtcars, aes(mpg, fill = cyl)) +
geom_histogram()
ggplot(mtcars, aes(mpg, fill = cyl)) +
geom_histogram() +
facet_wrap(~ cyl)
ggplot(mtcars, aes(mpg, fill = factor(cyl))) +
geom_histogram() +
facet_wrap(~ cyl)
ggplot(mtcars, aes(mpg, fill = factor(cyl))) +
geom_histogram()
ggplot(mtcars, aes(mpg, fill = factor(cyl))) +
geom_histogram() +
facet_wrap(~ cyl)
ggplot(mtcars, aes(mpg, fill = factor(cyl))) +
geom_histogram() +
facet_wrap(~ cyl, ncol = 1)
ggplot(mtcars, aes(factor(cyl), mpg, fill = factor(cyl))) +
geom_boxplot()
runApp('Nextcloud/Pédagogie-Administration/Année 2021-2022/Enseignements/STID 2AFA - NoSQL/tp5')
runApp()
runApp('Nextcloud/Pédagogie-Administration/Année 2021-2022/Enseignements/STID 2AFA - NoSQL/tp5')
runApp('Nextcloud/Pédagogie-Administration/Année 2021-2022/Enseignements/STID 2AFA - NoSQL/tp5')
?plotOutput
runApp('Nextcloud/Pédagogie-Administration/Année 2021-2022/Enseignements/STID 2AFA - NoSQL/tp5')
?column
runApp('Nextcloud/Pédagogie-Administration/Année 2021-2022/Enseignements/STID 2AFA - NoSQL/tp5')
txhousing
unique(txhousing$city)
runApp('Nextcloud/Pédagogie-Administration/Année 2021-2022/Enseignements/STID 2AFA - NoSQL/tp5')
txhousing
runApp('Nextcloud/Pédagogie-Administration/Année 2021-2022/Enseignements/STID 2AFA - NoSQL/tp5')
runApp('Nextcloud/Pédagogie-Administration/Année 2021-2022/Enseignements/STID 2AFA - NoSQL/tp5')
runApp('Nextcloud/Pédagogie-Administration/Année 2021-2022/Enseignements/STID 2AFA - NoSQL/tp5')
runApp('Nextcloud/Pédagogie-Administration/Année 2021-2022/Enseignements/STID 2AFA - NoSQL/tp5')
runApp()
runApp('Nextcloud/Pédagogie-Administration/Année 2021-2022/Enseignements/STID 2AFA - NoSQL/tp5')
runApp('Nextcloud/Pédagogie-Administration/Année 2021-2022/Enseignements/STID 2AFA - NoSQL/tp5')
runApp('Nextcloud/Pédagogie-Administration/Année 2021-2022/Enseignements/STID 2AFA - NoSQL/tp5')
runApp('Nextcloud/Pédagogie-Administration/Année 2021-2022/Enseignements/STID 2AFA - NoSQL/tp5')
runApp('Nextcloud/Pédagogie-Administration/Année 2021-2022/Enseignements/STID 2AFA - NoSQL/tp5')
runApp('Nextcloud/Pédagogie-Administration/Année 2021-2022/Enseignements/STID 2AFA - NoSQL/tp5')
runApp('Nextcloud/Pédagogie-Administration/Année 2021-2022/Enseignements/STID 2AFA - NoSQL/tp5')
??FactoMineR::CA
library(readxl)
df = read_excel("Downloads/df.xlsx")
df
library(dplyr)
data_quali = df %>% select(alternance, natureContrat)
data_quali = df %>% select(alternance, natureContrat)
data = table(data_quali$alternance, data_quali$natureContrat)
data
library(FactoMineR)
CA(data)
afc = CA(data)
plot(afc)
res$eig
afc
afc$eig
afc = CA(t(data))
plot(afc)
afc$eig
?CA
data(children)
children
dim(children)
res.ca <- CA (children, row.sup = 15:18, col.sup = 6:8)
res.ca$eig
coauthors_1 = get_coauthors(id_ABH)
library(scholar)
library(dplyr)
id_FXJ = "aW4afqQAAAAJ"
get_coauthors(id_FXJ)
publis = get_publications(id_FXJ)
id_ABH = "JZ3uW60AAAAJ"
coauthors_1 = get_coauthors(id_ABH)
publis = get_publications(id_ABH)
coauthors_2 = publis$author %>%
strsplit(",") %>%
unlist() %>%
iconv(to = "UTF-8") %>%
trimws() %>%
unique() %>%
toupper() %>%
unique() %>%
.[!(. %in% c("FX JOLLOIS", "F JOLLOIS"))] %>%
.[. != "..."] %>%
sort()
publis$coauthors = lapply(publis$author, function(l) {
ll = strsplit(l, ",") %>%
unlist() %>%
trimws() %>%
toupper()
which(coauthors_2 %in% ll)
})
library(networkD3)
coauthors = data.frame(id = 1:length(coauthors_2), name = coauthors_2, group = 1)
coauthors$size = sapply(coauthors$id, function(e) { sum(unlist(publis$coauthors) %in% e)})
range01 <- function(x){(x-min(x))/(max(x)-min(x))}
coauthors$size = round(range01(coauthors$size) * 99 + 1)
links = Reduce(rbind,
lapply(Filter(function(e) { length(e) > 0},  publis$coauthors),
function(e) {
if (length(e) > 2)
t(combn(e, 2))
else
NULL
}))
links = data.frame(links - 1)
names(links) = c("source", "target")
links = links %>% group_by(source, target) %>% summarise(value = n()) %>% arrange(desc(value))
forceNetwork(Links= links, Source = "source", Target = "target", Value = "value",
Nodes = coauthors, NodeID = "name", Group = "group", Nodesize = "size",
zoom = TRUE)
coauthors_2 = publis$author %>%
strsplit(",") %>%
unlist() %>%
iconv(to = "UTF-8") %>%
trimws() %>%
unique() %>%
toupper() %>%
unique() %>%
# .[!(. %in% c("FX JOLLOIS", "F JOLLOIS"))] %>%
.[!(. %in% c("AVNER BAR HEN", "AVNER BAR-HEN", "A BAR HEN", "A BAR-HEN"))] %>%
.[. != "..."] %>%
sort()
publis$coauthors = lapply(publis$author, function(l) {
ll = strsplit(l, ",") %>%
unlist() %>%
trimws() %>%
toupper()
which(coauthors_2 %in% ll)
})
library(networkD3)
coauthors = data.frame(id = 1:length(coauthors_2), name = coauthors_2, group = 1)
coauthors$size = sapply(coauthors$id, function(e) { sum(unlist(publis$coauthors) %in% e)})
range01 <- function(x){(x-min(x))/(max(x)-min(x))}
coauthors$size = round(range01(coauthors$size) * 99 + 1)
links = Reduce(rbind,
lapply(Filter(function(e) { length(e) > 0},  publis$coauthors),
function(e) {
if (length(e) > 2)
t(combn(e, 2))
else
NULL
}))
links = data.frame(links - 1)
names(links) = c("source", "target")
links = links %>% group_by(source, target) %>% summarise(value = n()) %>% arrange(desc(value))
forceNetwork(Links= links, Source = "source", Target = "target", Value = "value",
Nodes = coauthors, NodeID = "name", Group = "group", Nodesize = "size",
zoom = TRUE)
coauthors_2
coauthors_2 = publis$author %>%
strsplit(",") %>%
unlist() %>%
iconv(to = "UTF-8") %>%
trimws() %>%
unique() %>%
toupper() %>%
unique() %>%
# .[!(. %in% c("FX JOLLOIS", "F JOLLOIS"))] %>%
.[!(. %in% c("AVNER BAR HEN", "AVNER BAR-HEN", "A BAR HEN", "A BAR-HEN", "A BARHEN", "A BAR", "A BAR‐HEN"))] %>%
.[. != "..."] %>%
sort()
publis$coauthors = lapply(publis$author, function(l) {
ll = strsplit(l, ",") %>%
unlist() %>%
trimws() %>%
toupper()
which(coauthors_2 %in% ll)
})
library(networkD3)
coauthors = data.frame(id = 1:length(coauthors_2), name = coauthors_2, group = 1)
coauthors$size = sapply(coauthors$id, function(e) { sum(unlist(publis$coauthors) %in% e)})
range01 <- function(x){(x-min(x))/(max(x)-min(x))}
coauthors$size = round(range01(coauthors$size) * 99 + 1)
links = Reduce(rbind,
lapply(Filter(function(e) { length(e) > 0},  publis$coauthors),
function(e) {
if (length(e) > 2)
t(combn(e, 2))
else
NULL
}))
links = data.frame(links - 1)
names(links) = c("source", "target")
links = links %>% group_by(source, target) %>% summarise(value = n()) %>% arrange(desc(value))
forceNetwork(Links= links, Source = "source", Target = "target", Value = "value",
Nodes = coauthors, NodeID = "name", Group = "group", Nodesize = "size",
zoom = TRUE)
library(RSQLite)
install.packages("RSQLite")
library(RSQLite)
db = dbConnect(RSQLite::SQLite(), "Documents/GitHub/donnees/Chinook/Chinook_Sqlite.sqlite")
dbGetQuery(db, "
SELECT count(*), sum(Total)
from Invoice
where SUBSTRING(InvoiceDate, 1, 4) between '2009' and '2011'
;
")
dbGetQuery(db,"SELECT COUNT(*) as 'Nombre de factures entre 2009 et 2011',
SUM(Total) as 'Total des ventes entre 2009 et 2011'
FROM Invoice
WHERE InvoiceDate >= '2009-01-01 00:00:00' and
InvoiceDate < '2012-01-01 00:00:00';")
chi = db
dbGetQuery(chi,"SELECT BillingCountry, COUNT(InvoiceId) AS 'Nbre factures', (COUNT(InvoiceId)* 100 / (SELECT COUNT(*) FROM INVOICE)) AS '% of invoice'
FROM INVOICE
GROUP BY BillingCountry
ORDER BY COUNT(InvoiceId) DESC;")
library(shiny); runApp('Nextcloud/Pédagogie-Administration/Année 2021-2022/Evaluations/LP Santé - BD et TdB/Shiny à noter/AMBIGAINATHAN_Kathushna.R')
runApp('Nextcloud/Pédagogie-Administration/Année 2021-2022/Evaluations/LP Santé - BD et TdB/Shiny à noter/Broutin.R')
runApp('Nextcloud/Pédagogie-Administration/Année 2021-2022/Evaluations/LP Santé - BD et TdB/Shiny à noter/Broutin.R')
runApp('Nextcloud/Pédagogie-Administration/Année 2021-2022/Evaluations/LP Santé - BD et TdB/Shiny à noter/Broutin.R')
runApp('Nextcloud/Pédagogie-Administration/Année 2021-2022/Evaluations/LP Santé - BD et TdB/Shiny à noter/Broutin.R')
runApp('Nextcloud/Pédagogie-Administration/Année 2021-2022/Evaluations/LP Santé - BD et TdB/Shiny à noter/CHEN.R')
runApp('Nextcloud/Pédagogie-Administration/Année 2021-2022/Evaluations/LP Santé - BD et TdB/Shiny à noter/CONJAN_Mathias_TP_R_Shiny (2).R')
runApp('Nextcloud/Pédagogie-Administration/Année 2021-2022/Evaluations/LP Santé - BD et TdB/Shiny à noter/CONJAN_Mathias_TP_R_Shiny (2).R')
runApp('Nextcloud/Pédagogie-Administration/Année 2021-2022/Evaluations/LP Santé - BD et TdB/Shiny à noter/El kouche_Sofiane (2).R')
runApp('Nextcloud/Pédagogie-Administration/Année 2021-2022/Evaluations/LP Santé - BD et TdB/Shiny à noter/FAUCHOIS Antoine_LP Santé_app.R')
runApp('Nextcloud/Pédagogie-Administration/Année 2021-2022/Evaluations/LP Santé - BD et TdB/Shiny à noter/GANESHARAJ_geenisha_Lpsanté.R')
runApp('Nextcloud/Pédagogie-Administration/Année 2021-2022/Evaluations/LP Santé - BD et TdB/Shiny à noter/CHEN.R')
runApp('Nextcloud/Pédagogie-Administration/Année 2021-2022/Evaluations/LP Santé - BD et TdB/Shiny à noter/Guilhoto.R')
runApp('Nextcloud/Pédagogie-Administration/Année 2021-2022/Evaluations/LP Santé - BD et TdB/Shiny à noter/JI.R')
runApp('Nextcloud/Pédagogie-Administration/Année 2021-2022/Evaluations/LP Santé - BD et TdB/Shiny à noter/Landais.R')
runApp('Nextcloud/Pédagogie-Administration/Année 2021-2022/Evaluations/LP Santé - BD et TdB/Shiny à noter/LEMOUEL_TPSHINY.R')
runApp('Nextcloud/Pédagogie-Administration/Année 2021-2022/Evaluations/LP Santé - BD et TdB/Shiny à noter/LEMOUEL_TPSHINY.R')
runApp('Nextcloud/Pédagogie-Administration/Année 2021-2022/Evaluations/LP Santé - BD et TdB/Shiny à noter/NGO_MinhHuong_app.R')
runApp('Nextcloud/Pédagogie-Administration/Année 2021-2022/Evaluations/LP Santé - BD et TdB/Shiny à noter/PiednoirAlice_DST.R')
runApp('Nextcloud/Pédagogie-Administration/Année 2021-2022/Evaluations/LP Santé - BD et TdB/Shiny à noter/PiednoirAlice_DST.R')
runApp('Nextcloud/Pédagogie-Administration/Année 2021-2022/Evaluations/LP Santé - BD et TdB/Shiny à noter/ROLL_Johanna.R')
runApp('Nextcloud/Pédagogie-Administration/Année 2021-2022/Evaluations/LP Santé - BD et TdB/Shiny à noter/SARR_Ismail_app.R')
runApp('Nextcloud/Pédagogie-Administration/Année 2021-2022/Evaluations/LP Santé - BD et TdB/Shiny à noter/SARR_Ismail_app.R')
runApp('Nextcloud/Pédagogie-Administration/Année 2021-2022/Evaluations/LP Santé - BD et TdB/Shiny à noter/SRIRANJAN_Vinuisaa_LPDataSante.R')
runApp('Nextcloud/Pédagogie-Administration/Année 2021-2022/Evaluations/LP Santé - BD et TdB/Shiny à noter/Turco_Marie_app.R')
runApp('Nextcloud/Pédagogie-Administration/Année 2021-2022/Evaluations/LP Santé - BD et TdB/Shiny à noter/zhang_martine.R')
repertoire = "~/Downloads/moitier d_allone 11 juin 2022/"
library(imager)
resize_images = function(repertoire) {
images = dir(path = repertoire, pattern = "*.jpg")
cat("Resize des images du répertoire :", repertoire, "\n")
for (i in images) {
img = load.image(paste(repertoire, i, sep = "/"))
img_half = resize_halfXY(img)
save.image(img_half, paste(repertoire, gsub(".jpg", "-small.jpg", i), sep = "/"))
cat(".")
}
cat("\nFin\n")
}
resize_images(repertoire)
repertoire = "~/Downloads/créance le 09-07-2022/"
library(imager)
resize_images = function(repertoire) {
images = dir(path = repertoire, pattern = "*.jpg")
cat("Resize des images du répertoire :", repertoire, "\n")
for (i in images) {
img = load.image(paste(repertoire, i, sep = "/"))
img_half = resize_halfXY(img)
save.image(img_half, paste(repertoire, gsub(".jpg", "-small.jpg", i), sep = "/"))
cat(".")
}
cat("\nFin\n")
}
resize_images(repertoire)
dim(tips)
library(tidyverse)
dim(tips)
data(tips)
tip
tips
??tips
data()
world_bank_pop
smiths
us_rent_income
txhousing
midwest
diamonds
install.packages('xaringan')
kable(diamonds %>% slice(sample(1:nrow(diamonds), 10)), format = "html") %>%
kable_styling(position = "center", html_options = c("striped", "scale_down"))
library(kableExtra)
kable(diamonds %>% slice(sample(1:nrow(diamonds), 10)), format = "html") %>%
kable_styling(position = "center", html_options = c("striped", "scale_down"))
kable(diamonds %>% slice(sample(1:nrow(diamonds), 10)), format = "html") %>%
kable_styling(position = "center")
library(cowplot)
ggplot(diamonds, aes(price)) +
geom_histogram(fill = "steelblue") +
geom_vline(xintercept = mean(diamonds$price), alpha = .5) +
annotate("text", x = mean(diamonds$price), y = 15000, label = "Moyenne", hjust = -.1, size = 7) +
labs(y = "", x = "") +
theme_minimal() + xlim(c(0, 20000)) +
theme(text = element_text(size = 25))
setwd("~/Documents/GitHub/cours-2022-2023/tc-stats-probas")
.center[![:scale 80%](https://upload.wikimedia.org/wikipedia/commons/thumb/a/a8/Set_subsetAofB.svg/2048px-Set_subsetAofB.svg.png)
library(kableExtra)
?kable
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE)
library(tidyverse)
library(knitr)
library(kableExtra)
set.seed(1234)
x = 1:6
gain = ((x %% 2) == 0) + (x <= 3) * -2 + (x == 2) * 5
kable(t(data.frame(x = x, gain = gain))) %>%
kable_styling(position = "center")
tab = as.data.frame(table(gain) / 6, responseName = "p")
kable(t(tab), digits = 2) %>%
kable_styling(position = "center")
tab
t(tab)
kable(t(tab))
kable(t(tab), digits = 2)
kable(t(round(tab)))
gain
tab = as.data.frame(round(table(gain) / 6, 2), responseName = "p")
tab
tab = as.data.frame(round(table(gain) / 6, 4), responseName = "p")
kable(t(tab), digits = 2) %>%
kable_styling(position = "center")
tab = data.frame(matrix(1, nrow = 6, ncol = 6))
colnames(tab) = paste0("b=", 1:6)
rownames(tab) = paste0("a=", 1:6)
for (i in 1:6)
for (j in 1:6)
tab[i,j] = max(i, j)
kable(tab, format = "html") %>%
kable_styling(position = "center")
